{"version":3,"file":"static/js/186.9d206ef5.chunk.js","mappings":"+QAQe,SAASA,IACtB,IAAMC,GAAWC,EAAAA,EAAAA,MACjB,GAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAgCJ,EAAAA,EAAAA,UAAS,IAAzC,eAAOK,EAAP,KAAiBC,EAAjB,KASMC,EAAQ,WACZL,EAAQ,IACRE,EAAS,IACTE,EAAY,GACb,EAEKE,EAAe,SAAAC,GACnB,MAAwBA,EAAEC,OAAlBT,EAAR,EAAQA,KAAMU,EAAd,EAAcA,MACd,OAAQV,GACN,IAAK,OACHC,EAAQS,GACR,MAEF,IAAK,QACHP,EAASO,GACT,MAEF,IAAK,WACHL,EAAYK,GAMjB,EAED,OACE,SAAC,IAAD,WACE,UAAC,IAAD,CAAMC,SAnCW,SAAAH,GACnBA,EAAEI,iBAEFf,EAASgB,EAAAA,GAAAA,SAAwB,CAAEb,KAAAA,EAAME,MAAAA,EAAOE,SAAAA,KAChDE,GACD,EA8BiCQ,aAAa,MAA3C,WACE,UAAC,UAAD,CAAYC,UAAU,OAAOC,UAAU,gBAAvC,WACE,SAAC,UAAD,oBACA,SAAC,YAAD,CACEC,KAAK,OACLC,YAAY,kBACZlB,KAAK,OACLU,MAAOV,EACPmB,SAAUZ,QAGd,UAAC,UAAD,CAAYQ,UAAU,OAAOC,UAAU,iBAAvC,WACE,SAAC,UAAD,6BACA,SAAC,YAAD,CACEC,KAAK,QACLC,YAAY,cACZlB,KAAK,QACLU,MAAOR,EACPiB,SAAUZ,QAId,UAAC,UAAD,CAAYQ,UAAU,OAAOC,UAAU,oBAAvC,WACE,SAAC,UAAD,wBACA,SAAC,YAAD,CACEC,KAAK,WACLC,YAAY,WACZlB,KAAK,WACLU,MAAON,EACPe,SAAUZ,QAGd,SAAC,IAAD,CAAQa,QAAQ,kBAAkBH,KAAK,SAAvC,0BAMP,C","sources":["pages/RegistrationPage.js"],"sourcesContent":["import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { authOperations } from 'redux/auth';\nimport Container from 'components/Container';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\n\nexport default function RegistrationPage() {\n  const dispatch = useDispatch();\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    dispatch(authOperations.register({ name, email, password }));\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setEmail('');\n    setPassword('');\n  };\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'email':\n        setEmail(value);\n        break;\n\n      case 'password':\n        setPassword(value);\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  return (\n    <Container>\n      <Form onSubmit={handleSubmit} autoComplete=\"off\">\n        <Form.Group className=\"mb-3\" controlId=\"formBasicName\">\n          <Form.Label>Name</Form.Label>\n          <Form.Control\n            type=\"name\"\n            placeholder=\"Enter your name\"\n            name=\"name\"\n            value={name}\n            onChange={handleChange}\n          />\n        </Form.Group>\n        <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n          <Form.Label>Email address</Form.Label>\n          <Form.Control\n            type=\"email\"\n            placeholder=\"Enter email\"\n            name=\"email\"\n            value={email}\n            onChange={handleChange}\n          />\n        </Form.Group>\n\n        <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n          <Form.Label>Password</Form.Label>\n          <Form.Control\n            type=\"password\"\n            placeholder=\"Password\"\n            name=\"password\"\n            value={password}\n            onChange={handleChange}\n          />\n        </Form.Group>\n        <Button variant=\"outline-primary\" type=\"submit\">\n          Register\n        </Button>\n      </Form>\n    </Container>\n  );\n}"],"names":["RegistrationPage","dispatch","useDispatch","useState","name","setName","email","setEmail","password","setPassword","reset","handleChange","e","target","value","onSubmit","preventDefault","authOperations","autoComplete","className","controlId","type","placeholder","onChange","variant"],"sourceRoot":""}